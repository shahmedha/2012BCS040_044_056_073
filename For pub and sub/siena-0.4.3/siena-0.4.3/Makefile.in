#  -*- Makefile -*-
#
#  This file is part of Siena, a wide-area event notification system.
#  See http://www.cs.colorado.edu/serl/siena/
#
#  Author: Antonio Carzaniga <carzanig@cs.colorado.edu>
#  See the file AUTHORS for full details. 
#
#  Copyright (C) 1998-2001 University of Colorado
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
#  USA, or send email to serl@cs.colorado.edu.
#
#
# $Id: Makefile.in,v 1.2 2006/08/15 18:35:40 carzanig Exp $
#
top_srcdir	= @top_srcdir@
srcdir		= @srcdir@
top_incdir	= $(top_srcdir)/include
sienainc	= $(top_incdir)/siena
#
prefix		= @prefix@
libdir		= $(prefix)/lib
incdir		= $(prefix)/include
docdir		= $(prefix)/doc
#
VPATH		= $(srcdir)
#
@SET_MAKE@
#
SHELL		= /bin/sh
AR		= ar
ARFLAGS		= rc
RANLIB		= @RANLIB@
CXX		= @CXX@
INSTALL		= @INSTALL@
MKPATH		= @MKPATH@
DOXYGEN		= @DOXYGEN@
#
CPPFLAGS	= @CPPFLAGS@ -I. -I$(top_incdir) -I$(top_srcdir)
CXXFLAGS	= $(CPPFLAGS) @CXXFLAGS@
LDFLAGS		= @LDFLAGS@
LIBS		= @LIBS@
#
SYSTEM		= siena
VERSION		= @VERSION@
#
PACKAGE		= $(SYSTEM)-$(VERSION)
# 
CXXDOCDIR	= doc
#
CONFIGS		= configure install-sh mkinstalldirs \
		configure.in sienaconf.in aclocal.m4

MAKES		= Makefile.in

WIN32STUFF	= Makefile-win32.in README.win32 sienaconf-win32.h

DOCS		= AUTHORS LICENSE README VERSION fdl.txt
DOXYSTUFF	= footer.html antodoc.css doxygen.conf.in header.html.in
EXAMPLES	= subscriber.cc publisher.cc
DOCPKG		= docspack.tar.gz

TESTS		= tests/Makefile.in					\
		tests/TestTokenizer.cc tests/TestPacketReader.cc	\
		tests/TestSender.cc tests/TestTCPReceiver.cc		\
		tests/TestUDPReceiver.cc				\
		tests/test_tokenizer.sh tests/test_packet_reader.sh	\
		tests/test_comm.sh tests/test_thinclient.sh

INCLUDES	= include/siena/Siena.h include/siena/SENP.h	\
		include/siena/Comm.h include/siena/ThinClient.h	\
		include/siena/SienaId.h				\
		SENPTokenizer.h 

USRINCS		= include/siena.h
CONFINCS	= sienaconf.h 

INLINES		= include/siena/Siena.icc include/siena/ThinClient.icc	\
		include/siena/SENP.icc include/siena/Comm.icc

SOURCES		= Siena.cc SENP.cc Comm.cc SienaId.cc ThinClient.cc

SRCDIST		= $(DOCS) $(CONFIGS) $(MAKES) \
		$(INCLUDES) $(USRINCS) $(INLINES) $(SOURCES) \
		$(DOXYSTUFF) $(EXAMPLES) $(DOCPKG) $(TESTS) \
		$(WIN32STUFF)

WIN32SRCDIST	= $(DOCS) $(WIN32STUFF) \
		$(INCLUDES) $(INLINES) $(SOURCES) \
		$(EXAMPLES)

OBJS		= Siena.o SENP.o SienaId.o Comm.o ThinClient.o

.PHONY: all test srcpkg binpkg doc makedoc unpackdocs rundoxygen \
	install uninstall clean distclean depend depend.mk \
	install-usrincs install-incs install-libs install-docs \
	checkout win32srcpkg reconfigure

.SUFFIXES:
.SUFFIXES: .cc .o

default: libsiena.a

all: srcpkg binpkg win32srcpkg

publisher: publisher.o libsiena.a
	$(CXX) -o $@ publisher.o -L. -lsiena

subscriber: subscriber.o libsiena.a
	$(CXX) -o $@ subscriber.o -L. -lsiena

.cc.o:
	$(CXX) $(CXXFLAGS) -c $< -o $@

libsiena.a: $(OBJS)
	/bin/rm -f libsiena.a
	$(AR) $(ARFLAGS) libsiena.a $(OBJS)
	$(RANLIB) libsiena.a

checkout:
	cd $(srcdir) && co $(COFLAGS) $(SRCDIST) < /dev/null

# documentation
# 
# HOWTOMAKEDOC is defined by `configure' to either "rundoxygen" if
# doxygen is available, or "unpackdocs" is doxygen is not available
#
doc: @HOWTOMAKEDOC@

makedocs: header.html footer.html antodoc.css rundoxygen docs/html/fdl.txt

docs/html/fdl.txt: fdl.txt
	cp $< $@

rundoxygen: doxygen.conf
	$(DOXYGEN) $<

unpackdocs: $(DOCPKG)
	gzip -dc $< | tar xvf -

$(srcdir)/$(DOCPKG):
	rm -rf docs
	$(MAKE) rundoxygen docs/html/fdl.txt
	tar cf - docs | gzip > $@

#
# installation
#
install: install-usrincs install-incs install-libs install-docs

install-incs: $(INCLUDES) $(INLINES)
	$(MKPATH) $(incdir)/siena
	$(INSTALL) -m 444 $^ $(incdir)/siena

install-usrincs: $(USRINCS) $(CONFINCS)
	$(MKPATH) $(incdir)
	$(INSTALL) -m 444 $^ $(incdir)

install-libs: libsiena.a
	$(MKPATH) $(libdir)
	$(INSTALL) -m 444 $^ $(libdir)

install-docs: doc
	find docs -print | cpio -p $(prefix)

test: 
	cd tests && $(MAKE) all

clean:
	/bin/rm -rf core *.o $(OBJS) *.inc libsiena.a \
		*.inc $(CXXDOCDIR) \
		$(PACKAGE).tar.gz $(PACKAGE)-bin.tar.gz $(PACKAGE).zip

distclean: clean
	/bin/rm -f Makefile sienaconf.h doxygen.conf header.html \
		config.status config.cache config.log

maintainerclean: distclean
	/bin/rm -f $(srcdir)/$(DOCPKG)
#
# source distribution
#
srcpkg: $(PACKAGE).tar.gz
#
$(PACKAGE).tar.gz:
	/bin/rm -rf $(PACKAGE)
	mkdir $(PACKAGE)
	(cd $(srcdir);tar cf - $(SRCDIST))|(cd $(PACKAGE);tar xf -)
	tar cf - $(PACKAGE) | gzip > $@
	/bin/rm -rf $(PACKAGE)

#
# obviously I should have a configure check for zip...
#
win32srcpkg: $(PACKAGE)-win32-src.zip
#
$(PACKAGE)-win32-src.zip: Makefile-win32 $(srcdir)/$(DOCPKG)
	/bin/rm -rf $(PACKAGE)
	mkdir $(PACKAGE)
	(cd $(srcdir);tar cf - $(WIN32SRCDIST))|(cd $(PACKAGE);tar xf -)
	cp Makefile-win32 $(PACKAGE)/Makefile
	mv $(PACKAGE)/sienaconf-win32.h $(PACKAGE)/include/sienaconf.h 
	gzip -dc $(srcdir)/$(DOCPKG) | (cd $(PACKAGE); tar xf -)
	zip -r $@ $(PACKAGE)
	/bin/rm -rf $(PACKAGE)

#
# binary distribution
#
binpkg: $(PACKAGE)-bin.tar.gz
#
$(PACKAGE)-bin.tar.gz:
	/bin/rm -rf $(PACKAGE)
	$(MAKE) install prefix=`pwd`/$(PACKAGE)
	tar cf - $(PACKAGE) | gzip > $@
	/bin/rm -rf $(PACKAGE)
#
# autoconf stuff
#
$(top_srcdir)/configure: $(top_srcdir)/configure.in 
	cd $(top_srcdir) && autoconf

reconfigure: config.status
	./config.status

sienaconf.h: $(top_srcdir)/sienaconf.in config.status
	./config.status

Makefile: $(top_srcdir)/VERSION $(srcdir)/Makefile.in config.status
	./config.status

Makefile-win32: $(top_srcdir)/VERSION $(srcdir)/Makefile-win32.in config.status
	./config.status

doxygen.conf: $(top_srcdir)/VERSION $(srcdir)/doxygen.conf.in config.status
	./config.status

header.html: $(top_srcdir)/VERSION $(srcdir)/header.html.in config.status
	./config.status

config.status: $(top_srcdir)/configure
	./config.status --recheck
#
# automatic (C/C++) dependencies 
#
depend: $(INCLUDES) $(INLINES) depend.mk
depend.mk: $(SOURCES)
	echo '# --- AUTOMATIC DEPENDENCIES ---' >> Makefile
	$(CXX) -M $(CPPFLAGS) $^ >> Makefile
#
# dependencies will be appended here if you `$(MAKE) depend'
#
