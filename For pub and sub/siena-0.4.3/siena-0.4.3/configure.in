##
##  This file is part of Siena, a wide-area event notification system.
##  See http://www.cs.colorado.edu/serl/dot/siena.html
##
##  Author: Antonio Carzaniga <carzanig@cs.colorado.edu>
##  See the file AUTHORS for full details. 
##
##  Copyright (C) 1998-1999 University of Colorado
##
##  This program is free software; you can redistribute it and/or
##  modify it under the terms of the GNU General Public License
##  as published by the Free Software Foundation; either version 2
##  of the License, or (at your option) any later version.
##
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License
##  along with this program; if not, write to the Free Software
##  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
##  USA, or send email to serl@cs.colorado.edu.
## 
## 
## $Id: configure.in,v 1.2 2003/07/09 20:34:59 carzanig Exp $
##
AC_INIT(VERSION)
echo //
echo // Configuring Siena...
echo //
echo // Please contact Antonio Carzaniga \<carzanig@cs.colorado.edu\>
echo // if you have problems configuring or compiling Siena
echo //
AC_CONFIG_HEADER(sienaconf.h:sienaconf.in)
AC_PREFIX_DEFAULT(/opt)
#
# first of all let's define VERSION
#
AC_MSG_CHECKING(Siena version)
VERSION=`cat $srcdir/VERSION`
AC_DEFINE_UNQUOTED(VERSION, "${VERSION}")
AC_SUBST(VERSION)
AC_MSG_RESULT($VERSION)

AC_PROG_MAKE_SET
AC_PROG_INSTALL

AC_PROG_CXX

AC_LANG_CPLUSPLUS
AC_ANTO_CXX_NAMESPACES
AC_ANTO_CXX_EXCEPTIONS
if test "$ac_cv_anto_cxx_exceptions" != yes; then
    AC_MSG_ERROR(Siena needs a c++ that handles exceptions!)
fi

AC_PROG_INSTALL

AC_PROG_RANLIB

AC_ANTO_MKPATH(AC_MSG_ERROR(need a method for creating paths))

AC_SEARCH_LIBS(gethostbyname, nsl socket)
AC_SEARCH_LIBS(socket, socket)

AC_HEADER_TIME
AC_C_BIGENDIAN
AC_CHECK_HEADERS(inttypes.h stdint.h)
AC_ANTO_TYPE(int32_t, int, [
#ifdef HAVE_INTTYPES_H
#include <inttypes.h>
#else
#ifdef HAVE_STDINT_H
#include <stdint.h>
#endif
#endif
])
AC_ANTO_TYPE(uint8_t, unsigned char, [
#ifdef HAVE_INTTYPES_H
#include <inttypes.h>
#else
#ifdef HAVE_STDINT_H
#include <stdint.h>
#endif
#endif
])
AC_TYPE_SIZE_T
AC_CHECK_TYPE(ssize_t,int)
AC_ANTO_TYPE(socklen_t, int, [#include<sys/socket.h>])
AC_ANTO_TYPE(in_addr_t, unsigned int, [
#include<sys/socket.h>
#include<netinet/in.h>])
AC_ANTO_TYPE(in_port_t, unsigned short, [
#include<sys/socket.h>
#include<netinet/in.h>])
AC_ANTO_INADDR_NONE
AC_ANTO_INET_NTOP
dnl 
dnl finds doxygen
dnl
AC_ARG_WITH(doxygen,[  --with-doxygen=prog  uses prog as the document generator (must be compatible with doxygen)], DOXYGEN="$withval")
AC_CHECK_PROGS(DOXYGEN, doxygen)
if test -z "$DOXYGEN"; then
	AC_MSG_WARN(Program doxygen not found.)
	HOWTOMAKEDOC=unpackdocs
else
	#
	# I should also check whether $DOXYGEN actualy works...
	#
	AC_SUBST(DOXYGEN)
	HOWTOMAKEDOC=makedocs
fi
AC_SUBST(HOWTOMAKEDOC)
dnl 
AC_OUTPUT(Makefile tests/Makefile Makefile-win32 doxygen.conf header.html)
echo //
echo // now you can type \`make\' to compile Siena... good luck!
echo //
